pangram:

A pangram is a sentence where every letter of the English alphabet appears at least once.\nGiven a string sentence containing only lowercase English letters, return true if sentence is a pangram, or false otherwise.

import sys

sentence = sys.argv[1]

def checkIfPangram(sentence):
    
    alphabets_small = "abcdefghijklmnopqrstuvwxyz"
    alphabets_big = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
            
    sentence = list(set(sentence))
    sentence = sorted(sentence)
    sentence = "".join(sentence)
    if sentence in alphabets_small or sentence in alphabets_big:
        if len(sentence)==26:
            return True

    else:
        return False

Input: sentence = "thequickbrownfoxjumpsoverthelazydog"
Output: true
Explanation: sentence contains at least one of every letter of the English alphabet.

Input: sentence = "leetcode"
Output: false

-----------------------------------------------------------------------

fizzbuzz:

import sys

n = sys.argv[1]

def fizzBuzz(n):
    x = int(n)
    
    res = ""
    
    for i in range(1, x + 1):
        
        if i % 3 == 0 and i % 5 == 0:
            res += "FizzBuzz"
        elif i % 3 == 0:
            res += "Fizz"
        elif i % 5 == 0:
            res += "Buzz"
        else:
            res += str(i)
            
    return res
    
print(fizzBuzz(n))  

Input: n = 3
Output: "12Fizz"

Input: n = 5
Output: "12Fizz4Buzz"

Input: n = 15
Output: "12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz"



----------------------------------------------------

valid parens:

import sys

s = sys.argv[1]

def isValid(s) -> bool:
    stack=[]
    comb={'(':')','{':'}','[':']'}
    for brkt in s:
        if brkt in comb.keys():
            stack.append(brkt)
        else:
            if len(stack)>0 and comb[stack[-1]]==brkt:
                stack.pop()
            else:
                return False
    return len(stack)==0
        
print(isValid(s))        


Input: s = "()"
Output: true

Input: s = "()[]{}"
Output: true

Input: s = "([)]"
Output: false 

